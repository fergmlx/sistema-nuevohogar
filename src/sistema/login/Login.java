package sistema.login;

import com.formdev.flatlaf.FlatClientProperties;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JToolBar;
import sistema.Dashboard;
import sistema.dao.UsuarioDAO;
import sistema.modelos.Usuario;

/**
 *
 * @author Fer
 */
public class Login extends javax.swing.JFrame {
    
    private boolean captchaValido = false;
    
    /**
     * Creates new form Logging
     */
    public Login() {
        initComponents();
        
        txtCorreo.putClientProperty(FlatClientProperties.STYLE, "" + "iconTextGap:10;");
        txtCorreo.putClientProperty("JTextField.placeholderText", "Correo electrónico");
        txtCorreo.putClientProperty(FlatClientProperties.TEXT_FIELD_LEADING_ICON, new ImageIcon(getClass().getResource("/icons/mail2.png")));
        txtCorreo.setFont(new Font("Poppins", Font.PLAIN, 14));
        
        txtCorreo.putClientProperty(FlatClientProperties.STYLE, ""
                + "margin:20,20,20,20;");
        
        txtContrasena.putClientProperty(FlatClientProperties.STYLE, "" + "iconTextGap:10;");
        installRevealButton(txtContrasena);
        txtContrasena.putClientProperty("JTextField.placeholderText", "Contraseña");
        txtContrasena.putClientProperty(FlatClientProperties.TEXT_FIELD_LEADING_ICON, new ImageIcon(getClass().getResource("/icons/lock.png")));
        txtContrasena.setFont(new Font("Poppins Medium", Font.PLAIN, 14));
        
        txtContrasena.putClientProperty(FlatClientProperties.STYLE, ""
                + "margin:20,20,20,20;");
        
        txtCaptcha.putClientProperty(FlatClientProperties.STYLE, "" + "iconTextGap:10;");
        txtCaptcha.putClientProperty("JTextField.placeholderText", "Código");
        txtCaptcha.putClientProperty(FlatClientProperties.TEXT_FIELD_LEADING_ICON, new ImageIcon(getClass().getResource("/icons/captcha.png")));
        txtCaptcha.setFont(new Font("Poppins", Font.PLAIN, 14));
        
        txtCaptcha.putClientProperty(FlatClientProperties.STYLE, ""
                + "margin:20,20,20,20;");
        
        btnIngresar.setCornerRadius(50);
        btnIngresar.setBackgroundColor(Color.decode("#0575E6"));
        btnIngresar.setForeground(Color.WHITE);
        btnIngresar.setFont(new Font("Poppins", Font.PLAIN, 14));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gradientePanel1 = new prueba2.GradientePanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        campos = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnIngresar = new sistema.custom.BotonModificado();
        captcha = new CaptchaPanel();
        btnRefrescar = new sistema.custom.BotonModificado();
        lblResultado = new javax.swing.JLabel();
        lblCorreo = new javax.swing.JLabel();
        lblContra = new javax.swing.JLabel();
        txtCorreo = new javax.swing.JTextField();
        txtContrasena = new javax.swing.JPasswordField();
        txtCaptcha = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        gradientePanel1.setEndColor(new java.awt.Color(2, 27, 121));
        gradientePanel1.setStartColor(new java.awt.Color(5, 117, 230));

        jLabel3.setFont(new java.awt.Font("Poppins", 1, 40)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("NuevoHogar");

        jLabel4.setFont(new java.awt.Font("Poppins Medium", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Simplificando el camino de la jaula al sofá");

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/logo-bg1.png"))); // NOI18N

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/casual-life-3d-man-playing-with-dog-on-the-couch.png"))); // NOI18N

        javax.swing.GroupLayout gradientePanel1Layout = new javax.swing.GroupLayout(gradientePanel1);
        gradientePanel1.setLayout(gradientePanel1Layout);
        gradientePanel1Layout.setHorizontalGroup(
            gradientePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradientePanel1Layout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addGroup(gradientePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addContainerGap(311, Short.MAX_VALUE))
        );
        gradientePanel1Layout.setVerticalGroup(
            gradientePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradientePanel1Layout.createSequentialGroup()
                .addGap(284, 284, 284)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(48, 48, 48)
                .addComponent(jLabel6)
                .addContainerGap(179, Short.MAX_VALUE))
        );

        getContentPane().add(gradientePanel1, java.awt.BorderLayout.LINE_START);

        campos.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Poppins", 1, 26)); // NOI18N
        jLabel1.setText("Hola!");

        jLabel2.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jLabel2.setText("Bienvenid@ devuelta");

        btnIngresar.setText("Ingresar");
        btnIngresar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout captchaLayout = new javax.swing.GroupLayout(captcha);
        captcha.setLayout(captchaLayout);
        captchaLayout.setHorizontalGroup(
            captchaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 180, Short.MAX_VALUE)
        );
        captchaLayout.setVerticalGroup(
            captchaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        btnRefrescar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/refrescar.png"))); // NOI18N
        btnRefrescar.setToolTipText("Refrescar captcha");
        btnRefrescar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnRefrescar.setMargin(new java.awt.Insets(2, 2, 3, 14));
        btnRefrescar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefrescarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout camposLayout = new javax.swing.GroupLayout(campos);
        campos.setLayout(camposLayout);
        camposLayout.setHorizontalGroup(
            camposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(camposLayout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addGroup(camposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtCorreo)
                    .addComponent(lblContra, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(btnIngresar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, camposLayout.createSequentialGroup()
                        .addGroup(camposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblResultado, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                            .addComponent(txtCaptcha))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(camposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(captcha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnRefrescar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(lblCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtContrasena))
                .addContainerGap(124, Short.MAX_VALUE))
        );
        camposLayout.setVerticalGroup(
            camposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, camposLayout.createSequentialGroup()
                .addContainerGap(224, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(41, 41, 41)
                .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(camposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(captcha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtCaptcha))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(camposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRefrescar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblContra, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnIngresar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(172, 172, 172))
        );

        getContentPane().add(campos, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRefrescarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefrescarActionPerformed
        captcha.generarCaptcha();
        lblResultado.setText("");
        txtCaptcha.setText("");
        captchaValido = false; 
    }//GEN-LAST:event_btnRefrescarActionPerformed

    private void btnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarActionPerformed
         // Limpiar mensajes de error anteriores
        limpiarErrores();
        
        // Validar que no haya campos vacíos
        boolean hayErrores = false;
        
        String correo = txtCorreo.getText().trim();
        String password = new String(txtContrasena.getPassword());
        String captchaIngresado = txtCaptcha.getText().trim();
        
        // Validar correo
        if (correo.isEmpty()) {
            txtCorreo.putClientProperty("JComponent.outline", "error");
            txtCorreo.putClientProperty(FlatClientProperties.STYLE, "" + "iconTextGap:10;" + "placeholderForeground:#c1121f;");
            txtCorreo.putClientProperty("JTextField.placeholderText", "Debe ingresar un correo");
            hayErrores = true;
        } else if (!validarFormatoCorreo(correo)) {
            txtCorreo.setText("");
            txtCorreo.putClientProperty("JComponent.outline", "error");
            txtCorreo.putClientProperty(FlatClientProperties.STYLE, "" + "iconTextGap:10;" + "placeholderForeground:#c1121f;");
            txtCorreo.putClientProperty("JTextField.placeholderText", "Correo inválido");
            hayErrores = true;
        }
        
        // Validar contraseña
        if (password.isEmpty()) {
            txtContrasena.putClientProperty("JComponent.outline", "error");
            txtContrasena.putClientProperty(FlatClientProperties.STYLE, "" + "iconTextGap:10;" + "placeholderForeground:#c1121f;");
            txtContrasena.putClientProperty("JTextField.placeholderText", "Debe ingresar la contraseña");
            hayErrores = true;
        }
        
        // Validar captcha
        if (captchaIngresado.isEmpty()) {
            txtCaptcha.putClientProperty("JComponent.outline", "error");
            txtCaptcha.putClientProperty(FlatClientProperties.STYLE, "" + "iconTextGap:10;" + "placeholderForeground:#c1121f;");
            txtCaptcha.putClientProperty("JTextField.placeholderText", "Ingrese el código");
            hayErrores = true;
        } else {
            validarCaptcha(); // Esto actualiza la variable captchaValido
            if (!captchaValido) {
                hayErrores = true;
                // El mensaje ya se establece en validarCaptcha()
            }
        }
        
        // Si no hay errores de validación de formato, verificar credenciales
        if (!hayErrores) {
            try {
                // Autenticar usuario
                Usuario usuario = UsuarioDAO.obtenerPorEmail(correo);
                if (usuario == null) {
                    txtCorreo.setText("");
                    txtCorreo.putClientProperty("JComponent.outline", "error");
                    txtCorreo.putClientProperty(FlatClientProperties.STYLE, "" + "iconTextGap:10;" + "placeholderForeground:#c1121f;");
                    txtCorreo.putClientProperty("JTextField.placeholderText", "Correo no registrado");
                } else {
                    if (!usuario.getPassword().equals(password)) {
                        txtContrasena.setText("");
                        txtContrasena.putClientProperty("JComponent.outline", "error");
                        txtContrasena.putClientProperty(FlatClientProperties.STYLE, "" + "iconTextGap:10;" + "placeholderForeground:#c1121f;");
                        txtContrasena.putClientProperty("JTextField.placeholderText", "Contraseña incorrecta");
                    } else {
                        UsuarioDAO.actualizarUltimoAcceso(usuario.getIdUsuario());
                        Dashboard dashboard = new Dashboard(usuario);
                        dashboard.setVisible(true);
                        this.dispose();
                    }
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(Login.this, 
                    "Error al conectar con la base de datos: " + ex.getMessage(),
                    "Error de conexión", 
                    JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnIngresarActionPerformed

    // Método para validar formato de correo electrónico
    private boolean validarFormatoCorreo(String correo) {
        String regex = "^[A-Za-z0-9+_.-]+@(.+)$";
        java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(regex);
        return pattern.matcher(correo).matches();
    }
    
    private void validarCaptcha() {
        String entrada = txtCaptcha.getText().trim();
        if (entrada.equalsIgnoreCase(captcha.getCodigo())) {
            lblResultado.setText("✅ Captcha Correcto");
            lblResultado.setForeground(Color.decode("#0575E6"));
            captchaValido = true; 
        } else {
            lblResultado.setText("❌ Captcha Incorrecto");
            lblResultado.setForeground(Color.RED);
            captchaValido = false; 
        }
    }
    
    private void limpiarErrores() {
        txtCorreo.putClientProperty("JComponent.outline", null);
        txtCorreo.putClientProperty(FlatClientProperties.STYLE, "" + "iconTextGap:10;");
        
        txtContrasena.putClientProperty("JComponent.outline", null);
        txtContrasena.putClientProperty(FlatClientProperties.STYLE, "" + "iconTextGap:10;");
        
        txtCaptcha.putClientProperty("JComponent.outline", null);
        txtCaptcha.putClientProperty(FlatClientProperties.STYLE, "" + "iconTextGap:10;");
    }

    private void installRevealButton(JPasswordField txt) {

        JToolBar toolBar = new JToolBar();
        toolBar.putClientProperty(FlatClientProperties.STYLE, "" +
                "margin:0,0,0,20;");
        JButton button = new JButton(new ImageIcon(getClass().getResource("/icons/eye.png")));

        button.addActionListener(new ActionListener() {

            private char defaultEchoChart = txt.getEchoChar();
            private boolean show;

            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                show = !show;
                if (show) {
                    button.setIcon(new ImageIcon(getClass().getResource("/icons/hide.png")));
                    txt.setEchoChar((char) 0);
                } else {
                    button.setIcon(new ImageIcon(getClass().getResource("/icons/eye.png")));
                    txt.setEchoChar(defaultEchoChart);
                }
            }
        });
        toolBar.add(button);
        txt.putClientProperty(FlatClientProperties.TEXT_FIELD_TRAILING_COMPONENT, toolBar);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private sistema.custom.BotonModificado btnIngresar;
    private sistema.custom.BotonModificado btnRefrescar;
    private javax.swing.JPanel campos;
    private CaptchaPanel captcha;
    private prueba2.GradientePanel gradientePanel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel lblContra;
    private javax.swing.JLabel lblCorreo;
    private javax.swing.JLabel lblResultado;
    private javax.swing.JTextField txtCaptcha;
    private javax.swing.JPasswordField txtContrasena;
    private javax.swing.JTextField txtCorreo;
    // End of variables declaration//GEN-END:variables
}
